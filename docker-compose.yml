version: '3.9'

services:
  web:
    build:
      context: .
      target: runner
    command: pnpm --filter @poshpilot/web dev
    ports:
      - '3000:3000'
    env_file:
      - .env.example
    volumes:
      - .:/app
      - web_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build:
      context: .
      target: runner
    command: pnpm --filter @poshpilot/worker dev
    env_file:
      - .env.example
    volumes:
      - .:/app
      - worker_node_modules:/app/node_modules
    depends_on:
      redis:
        condition: service_healthy

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-poshpilot}
      POSTGRES_USER: ${POSTGRES_USER:-poshpilot}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-poshpilot}
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER']
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    command: redis-server --save ''
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data

volumes:
  web_node_modules:
  worker_node_modules:
  postgres_data:
  redis_data:
